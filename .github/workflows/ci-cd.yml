name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Permissions to push changes and create releases

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full commit history
          fetch: '--all'   # Fetch all branches to ensure release exists

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Check for changes in training_data.csv
        id: check_changes
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q 'training_data.csv'; then
            echo "CHANGED=true" >> $GITHUB_ENV
          else
            echo "CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Train Linear Model
        if: env.CHANGED == 'true'
        run: |
          python train_model.py  # Ensure this generates linear_model.txt

      - name: Commit and Push Linear Model to Release Branch
        if: env.CHANGED == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Save the trained model to a temporary location
          mv linear_model.txt /tmp/linear_model.txt
          
          # Switch to release branch and merge main
          git checkout release
          git merge main --ff-only || git merge main --no-edit
          
          # Restore the trained model
          mv /tmp/linear_model.txt linear_model.txt
          
          # Commit and push the model
          git add linear_model.txt
          git commit -m "Update linear model" || echo "No changes to commit"
          git push origin release

      - name: Create GitHub Release
        id: create_release
        if: env.CHANGED == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: "Automated release with updated linear model."
          draft: false
          prerelease: false

      - name: Upload Linear Model to Release
        if: env.CHANGED == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linear_model.txt
          asset_name: linear_model.txt
          asset_content_type: text/plain